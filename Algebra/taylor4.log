This is pdfTeX, Version 3.14159265-2.6-1.40.17 (TeX Live 2016) (preloaded format=pdftex 2016.8.6)  23 DEC 2018 13:47
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**taylor4.tex
(./taylor4.tex
Overfull \hbox (16.51129pt too wide) in paragraph at lines 88--91
[][][]\tenrm see the fourth so-lu-tion of this ques-tion in https://kskedlaya.o
rg/putnam-archive/2018s.pdf|

\hbox(8.5+2.5)x391.46176, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\hbox(6.88586+0.0)x0.0, glue set - 13.69446fil
..\glue 0.0 plus 1.0fil minus 1.0fil
..\mathon
..\hbox(3.25694+0.0)x8.69446, shifted -3.62892
...\sevensy ^^C
...\sevensy ^^C
..\mathoff
..\kern 5.0
.\vbox(8.5+0.0)x0.0
.\tenrm s
.\tenrm e
.etc.


Overfull \hbox (6.53494pt too wide) in paragraph at lines 121--124
[]\tentt I know this iden-tity "hun-dred years". Karabegov's proof makes me to 
re-|

\hbox(6.11111+2.22223)x391.46176
.\hbox(0.0+0.0)x20.0
.\tentt I
.\glue 5.24995
.\tentt k
.\tentt n
.etc.

[1{/usr/local/texlive/2016/texmf-var/fonts/map/pdftex/updmap/pdftex.map}]
[2] [3] )</usr/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmb
x10.pfb></usr/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmex
10.pfb></usr/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi1
0.pfb></usr/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi7.
pfb></usr/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pf
b></usr/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmr5.pfb><
/usr/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmr7.pfb></us
r/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy10.pfb></usr
/local/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy5.pfb></usr/l
ocal/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy7.pfb></usr/loc
al/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmti10.pfb></usr/loca
l/texlive/2016/texmf-dist/fonts/type1/public/amsfonts/cm/cmtt10.pfb>
Output written on taylor4.pdf (3 pages, 132370 bytes).
PDF statistics:
 62 PDF objects out of 1000 (max. 8388607)
 44 compressed objects within 1 object stream
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

